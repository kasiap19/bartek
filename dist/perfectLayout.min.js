(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.perfectLayout = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";function _interopRequireDefault(r){return r&&r.__esModule?r:{"default":r}}function perfectLayout(r,t,e,n){n=n||{},n.margin=n.hasOwnProperty("margin")?n.margin:0;var a=_perfectRowsNumber(r,t,e),i=parseInt(e/2,10);if(1>a)return r.map(function(r){return{data:r.data,src:r.src,width:parseInt(i*r.ratio)-2*n.margin,height:i}});var u=function(){var e=r.map(function(r){return parseInt(100*r.ratio,10)}),i=_libBSTLinearPartitionJs2["default"](e,a),u=0;return{v:i.map(function(e){var a=e.reduce(function(t,e,n){return t+r[u+n].ratio},0);return e.map(function(){var e=r[u++];return{data:e.data,src:e.src,width:parseInt(t/a*e.ratio,10)-2*n.margin,height:parseInt(t/a,10)}})})}}();return"object"==typeof u?u.v:void 0}function _perfectRowsNumber(r,t,e){var n=parseInt(e/2,10),a=r.reduce(function(r,t){return r+t.ratio*n},0);return Math.round(a/t)}Object.defineProperty(exports,"__esModule",{value:!0}),exports["default"]=perfectLayout;var _libBSTLinearPartitionJs=require("./lib/BSTLinearPartition.js"),_libBSTLinearPartitionJs2=_interopRequireDefault(_libBSTLinearPartitionJs);module.exports=exports["default"];

},{"./lib/BSTLinearPartition.js":2}],2:[function(require,module,exports){
"use strict";function BSTLinearPartition(r,t){if(r.length<=1)return[r];if(t>=r.length)return r.map(function(r){return[r]});var e=threshold(r,t),n=0;return r.reduce(function(r,t){return sum(r[n])+t>e&&n++,r[n].push(t),r},new Array(t).join().split(",").map(function(){return[]}))}function threshold(r,t){for(var e=max(r),n=sum(r);n>e;){var u=e+(n-e)/2;requiredElements(r,u)<=t?n=u:e=u+1}return e}function requiredElements(r,t){return r.reduce(function(r,e){return r.tot+=e,r.tot>t&&(r.tot=e,r.n++),r},{tot:0,n:1}).n}function sum(r){return r.reduce(function(r,t){return r+t},0)}function max(r){return r.reduce(function(r,t){return t>r?t:r},0)}Object.defineProperty(exports,"__esModule",{value:!0}),exports["default"]=BSTLinearPartition,module.exports=exports["default"];

},{}]},{},[1])(1)
});